tt->Draw("dcaErr[0]*dcaErr[0] : 1/ptMC >> hh(20,0.1,5,100,0,1e-3","nclITS>=4")
tt->Draw("dcaErr[0]*dcaErr[0] : 1/ptMC >> hh(20,0.1,5,100,0,1e-3","nclTPC>70 && nclITS>=4")
tt->Draw("dcaErr[0]*dcaErr[0] : 1/ptMC >> hh(20,0.1,5,100,0,1e-3","nclTPC>70 && nclITS>=4")
tt->Draw("dcaErr[0] : 1/ptMC >> hh(20,0.1,5,100,0,1e-3","nclTPC>70 && nclITS>=4")
tt->Draw("dcaErr[0]*dcaErr[0] : 1/ptMC >> hh(20,0.1,5,100,0,1e-3","nclTPC>70 && nclITS>=4")
tt->Draw("dcaErr[0]*dcaErr[0] : 1/ptMC >> hh(20,0.1,5,100,0,1e-3","nclTPC>70 && nclITS>=7")
tt->Draw("dcaErr[0]*dcaErr[0] : 1/ptMC >> hh(20,0.1,5,100,0,1e-3","nclTPC>70 && nclITS>=4")
c1->Print("fmcdca.gif")
.q
.q
.x sim.C
.q
.q
.q
.x sim.C
.x sim.C
TFile *_file0 = TFile::Open("/data/algTest/output_v1/collLHC12g_000188503_v1/controlRes.root")
.ls
res->Draw("fChi2")
res->Print()
res->Draw("fChi2/fNPoints >> hh(100,0,100)")
tt = res
TFile *_file0 = TFile::Open("/data/algTest/output_v0/collLHC12g_000188503_cpass1_pass2_1000/controlRes.root")
t0 = res
tt->Draw("fChi2/fNPoints >> hh(100,0,100)")
t0->Draw("fChi2/fNPoints >> h0(100,0,100)")
hh->Draw()
tt->Print()
tt->Draw("fDY","fVolID==0")
t0->Draw("fDY","fVolID==0")
t0->Draw("fDY >> vdy0(100,-0.15,0.15)","fVolID==0")
tt->Draw("fDY >> vdyt(100,-0.15,0.15)","fVolID==0")
vdyt->Draw()
vdy0->Draw()
vdyt->Draw("same")
tt->Draw("fDz >> vdzt(100,-0.15,0.15)","(fVolID>>11)==0")
tt->Draw("fDZ >> vdzt(100,-0.15,0.15)","(fVolID>>11)==0")
t0->Draw("fDZ >> vdz0(100,-0.15,0.15)","(fVolID>>11)==0")
t0->Draw("fDZ >> vdz0(100,-0.15,0.15)","(fVolID>>11)==1")
t0->Draw("fDZ >> vdz0(100,-0.5,0.5)","(fVolID>>11)==1")
tt->Draw("fDZ >> vdzt(100,-0.5,0.5)","(fVolID>>11)==1")
tt->GetEntries()
tt->Draw("fDZ >> vdzt(100,-0.5,0.5)","(fVolID>>11)==0")
tt->Draw("fDZ >> vdzt(100,-0.5,0.5)","(fVolID>>11)==2")
t0->Draw("fDZ >> vdz0(100,-0.5,0.5)","(fVolID>>11)==2")
vdzt->Draw()
vdz0->Draw()
vdzt->Draw("same")
t0->Draw("fDZ >> vdz0(100,-0.5,0.5)","(fVolID>>11)==12")
t0->Draw("fDZ >> vdz0(100,-1.5,1.5)","(fVolID>>11)==12")
tt->Draw("fDZ >> vdzt(100,-1.5,1.5)","(fVolID>>11)==12")
tt->Draw("fDY >> vdyt(100,-1.5,1.5)","(fVolID>>11)==12")
t0->Draw("fDY >> vdy0(100,-1.5,1.5)","(fVolID>>11)==12")
vdyt->Draw("same")
.q
TGrid::Connect("alien://")
TFile *_file0 = TFile::Open("alien:///alice/data/2012/OCDB/ITS/Align/Data/Run0_999999999_v7_s0.root")
.ls
AliCDBEntry->GetObject()->Print()
AliCDBEntry->GetObject()->Print(); >> itsAlgOld
.q
TGrid::Connect("alien://")
TFile *_file0 = TFile::Open("alien:///alice/cern.ch/user/s/shahoian/tstOCDB/outOCDB_LHC12tst0/ITS/Align/Data/Run0_999999999_v1_s0.root")
AliCDBEntry->GetObject()->Print(); >> itsAlgNew
.q
  AliCDBManager* man = AliCDBManager::Instance();
 man->SetRaw(1)
int run = 188503
AliGeomManager::LoadGeometry()
  AliCDBManager* man = AliCDBManager::Instance();
 man->SetRaw(1)
int run = 188503
   man->SetRun(run);    
.x configRefOCDB.C 
.!more configRefOCDB.C
AliGeomManager::ApplyAlignObjsFromCDB("ITS TRD TOF")
.q
 AliCDBManager* man = AliCDBManager::Instance();
 man->SetRaw(1)
int run = 188503
   man->SetRun(run);    
.x configRefOCDB.C 
AliGeomManager::LoadGeometry()
AliGeomManager::ApplyAlignObjsFromCDB("ITS TRD TOF")
 AliCDBManager* man = AliCDBManager::Instance();
int run = 188503
 man->SetRaw(1)
   man->SetRun(run);    
.x configRecoOCDB.C 
.x configRecoOCDB.C(run) 
.q
 AliCDBManager* man = AliCDBManager::Instance();
int run = 188503
 man->SetRaw(1)
   man->SetRun(run);    
.L configRecoOCDB.C
configRecoOCDB()
.q
 AliCDBManager* man = AliCDBManager::Instance();
int run = 188503
.L configRecoOCDB.C
configRecoOCDB()
AliGeomManager::LoadGeometry()
AliGeomManager::ApplyAlignObjsFromCDB("ITS TRD TOF")
AliITSgeomTGeo::GetMatrix(50)
AliITSgeomTGeo::GetMatrix(50)->Print()
AliITSgeomTGeo::GetMatrix(50)->Print()
double loc[3]={0}
double glo[3] = {0}
AliITSgeomTGeo::GetMatrix(50)->LocalToMaster(loc,glo)
double loc[3]={0}
double glo[3] = {0}
AliITSgeomTGeo::GetMatrix(50)->LocalToMaster(loc,glo)
glo[0]
glo[1]
glo[2]
glo[0]
glo[1]
glo[2]
AliITSgeomTGeo::GetMatrix(650)->LocalToMaster(loc,glo)
AliITSgeomTGeo::GetMatrix(650)->LocalToMaster(loc,glo)
glo[0]
glo[1]
glo[2]
glo[0]
glo[1]
glo[2]
-2.90331589205379501e+01--2.91551921420744904e+01
-3.20976721984487900e+00--3.43466635087889616e+00
.q
TFile *_file0 = TFile::Open("/data/algTest/output_v0/collLHC12g_000188503_cpass1_pass2_1000/001/controlRes.root")
.q
TFile *_file0 = TFile::Open("/data/algTest/output_v1/collLHC12g_000188503_v1/001/controlRes.root"
)
tt = res
tt = res
tt->Scan("Print()","","",1)
tt->Scan("Print()","","")
tt->Scan("Print()","","")
tt->Scan("Print()","","")
tt->Scan("Print(\"l\")","","")
tt->Scan("Print(\"l\")","","",1)
tt->Scan("Print(\"long\")","","",1)
.!less ~/alignGlo/AliAlgMPRecord.cxx
.!less ~/alignGlo/AliAlgMPRecord.cxx
.!less ~/alignGlo/AliAlgRes.cxx
tt->Scan("Print(\"r\")","","",1)
tt->Scan("Print(\"r\")","","",1)
.q
TFile *_file0 = TFile::Open("/data/algTest/output_v0/collLHC12g_000188503_cpass1_pass2_1000/001/controlRes.root")
tt = res
TFile *_file0 = TFile::Open("/data/algTest/output_v0/collLHC12g_000188503_cpass1_pass2_1000/001/controlRes.root")
.q
TFile *_file0 = TFile::Open("/data/algTest/output_v0/collLHC12g_000188503_cpass1_pass2_1000/001/controlRes.root")
tt = res
tt->Scan("Print(\"r\")","","",1)
.q
TFile *_file0 = TFile::Open("/data/algTest/output_v0/collLHC12g_000188503_cpass1_pass2_1000/001/mpData.root")
.q
TFile *_file0 = TFile::Open("/data/algTest/output_v1/collLHC12g_000188503_v1/001/mpData.root")
.ls
mpTree->Scan("Print()","","",1)
mpTree->Scan("Print()","","",1)
mpTree->Scan("Print()","","",1)
.L rec.C
TGrid::Connect("alien://")
rec("alien:///alice/data/2015/LHC15e/000223304/raw/15000223304023.50.root")
TGrid::Connect("alien://")
.L rec.C
rec("alien:///alice/data/2015/LHC15e/000223304/raw/15000223304023.50.root")
 AliCDBManager* man = AliCDBManager::Instance();
 man->SetRaw(1)
man->SetRun(223304)
AliCDBEntry* entry = AliCDBManager::Instance()->Get("GRP/CTP/Scalers")
fRunScalers = dynamic_cast<AliTriggerRunScalers*> (entry->GetObject())
fRunScalers->Print()
fRunScalers
TObjArray* arr = fRunScalers->GetScalersRecords()
arr
arr->GetEntries()
arr->Print()
fRunScalers->CorrectScalersOverflow()
 AliCDBManager* man = AliCDBManager::Instance();
 man->SetRaw(1)
man->SetRun(223304)
AliCDBEntry* entry = AliCDBManager::Instance()->Get("GRP/CTP/Scalers")
fRunScalers = dynamic_cast<AliTriggerRunScalers*> (entry->GetObject())
fRunScalers->Print()
.q
TGrid::Connect("alien://")
.L rec.C
rec("alien:///alice/data/2015/LHC15e/000223304/raw/15000223304023.50.root")
.q
TGrid::Connect("alien://")
.L rec.C
rec("alien:///alice/data/2015/LHC15e/000223304/raw/15000223304023.50.root")
.q
TFile *_file0 = TFile::Open("Run223304.Event0_10.ESD.tag.root")
.ls
.q
TFile *_file0 = TFile::Open("AliESDs.root")
.ls
esdTree->Print()
tt->Draw("Tracks.Pt()")
esdTree->Draw("Tracks.Pt()")
.q
.q
.q
.x tstAlg.C
.q
.x tstAlg.C
PrintTracks()
AliESDtrack* etr = esdEv->GetTrack(0)
algSTEER->ProcessTrack(etr)
tr = algSTEER->GetAlgTrack()
.x tstAlg.C
AliESDtrack* etr = esdEv->GetTrack(0)
algSTEER->ProcessTrack(etr)
tr = algSTEER->GetAlgTrack()
tr->Print()
tr->Print()
tr->Print("m")
tr->Print("meas")
tr->Print("p")
tr->Print("p")
 AliCDBManager* man = AliCDBManager::Instance();
 man->SetRaw(1)
man->SetRun(223298)
xx = man->Get("GRP/CTP/Scalers")
xx->GetObject()
xx->GetObject()->IsA()->GetName()
AliTriggerRunScalers* sc = (AliTriggerRunScalers*)xx->GetObject()
arr = sc->GetScalersRecords()
arr->Print()
arr->GetEntries()
sc->CorrectScalersOverflow()
sc->ReadScalers("alien:///alice/data/2015/OCDB/GRP/CTP/Scalers/Run223298_223298_v1_s0.root")
sc->ReadScalers("/alice/data/2015/OCDB/GRP/CTP/Scalers/Run223298_223298_v1_s0.root")
.q
 AliCDBManager* man = AliCDBManager::Instance();
 man->SetRaw(1)
man->SetRun(223298)
xx = man->Get("GRP/CTP/Scalers")
AliTriggerRunScalers* sc = (AliTriggerRunScalers*)xx->GetObject()
sc->CorrectScalersOverflow()
TObjArray* arr = sc->GetScalersRecords()
arr->GetEntriesFast()
.q
.x tstAlg.C
AliESDtrack* etr = esdEv->GetTrack(0)
algSTEER->ProcessTrack(etr)
tr = algSTEER->GetAlgTrack()
tr->Print("p")
.q
.q
.x tstAlg.C
algSTEER->ProcessTrack(esdEv->GetTrack(0))
algSTEER->ProcessTrack(esdEv->GetTrack(0)); > t
.!emacs t&
.q
.x tstAlg.C
algSTEER->ProcessTrack(esdEv->GetTrack(0)); > t
tr = algSTEER->GetAlgTrack()
tr->Print("p")
tr->Print("p meas")
tr->Print("p meas")
.q
tt = new TNtuple("tt","x:y:z:x1:y1:z1:xx:xr")
tt = new TNtuple("tt","","x:y:z:x1:y1:z1:xx:xr")
tt->ReadFile("xxx")
tt->Draw("y:x")
tt->Draw("y1:x1")
tt->Draw("z1:x1")
tt->Draw("z:x")
tt->Draw("y:x")
.q
.!rm t
.x tstAlg.C
algSTEER->ProcessTrack(esdEv->GetTrack(0)); > t
AliESDtrack* etr = esdEv->GetTrack(0)
etr->Print()
AliExternalTrackParam tt = *etr
tt->Rota
tt.RotateParamOnly(0.15)
tr->Print()
tr = algSTEER->GetAlgTrack()
tr->Print("p meas")
tt.RotateParamOnly(-0.175)
tt.Print()
tt->Propa
tt.PropagateParamOnly(375,AliTrackerBase::GetBz())
tt.PropagateParamOnlyTo(375,AliTrackerBase::GetBz())
tt.Print()
.q
.x tstAlg.C
algSTEER->ProcessTrack(esdEv->GetTrack(0)); > t
tr = algSTEER->GetAlgTrack()
.q
.x tstAlg.C
algSTEER->ProcessTrack(esdEv->GetTrack(0)); > t
tr = algSTEER->GetAlgTrack()
tr->Print("p meas")
pnt =  tr->GetPoint(3)
doube gl[3]
double gl[3]
for (int i=0;i<tr->GetN
@
.q
for (int i=0;i<tr->GetNPoints();i++) {pnt=tr->GetPoint(i);if (!pnt->ContainsMeasurement())continue;pnt->GetXYZGlo(gl);printf("%d %+e %+e %+e %+e %+e %+e\n",i,gl[0],gl[1],gl[2],pnt->GetXTracking(),pnt->GetYTracking(),pnt->GetZTraking());}
for (int i=0;i<tr->GetNPoints();i++) {pnt=tr->GetPoint(i);if (!pnt->ContainsMeasurement())continue;pnt->GetXYZGlo(gl);printf("%d %+e %+e %+e %+e %+e %+e\n",i,gl[0],gl[1],gl[2],pnt->GetXTracking(),pnt->GetYTracking(),pnt->GetZTracking());}
for (int i=0;i<tr->GetNPoints();i++) {pnt=tr->GetPoint(i);if (!pnt->ContainsMeasurement())continue;pnt->GetXYZGlo(gl);printf("%d %+e %+e %+e %+e %+e %+e\n",i,gl[0],gl[1],gl[2],pnt->GetXTracking(),pnt->GetYTracking(),pnt->GetZTracking());}; >> pnt
tt = new TNtuple("tt","","x:y:z:x1:y1:z1:xx:xr")
tt->ReadFile("xxx")
tp = new TNtuple("tp","","i:x:y:z:x1:y1:z1")
tp->ReadFile("pnt")
tp->Draw("x:i")
for (int i=0;i<tr->GetNPoints();i++) {pnt=tr->GetPoint(i);if (!pnt->ContainsMeasurement())continue;pnt->GetXYZGlo(gl);printf("%d %+e %+e %+e %+e %+e %+e\n",i,gl[0],gl[1],gl[2],pnt->GetXPoint(),pnt->GetYTracking(),pnt->GetZTracking());}; > pnt
tp->ReadFile("pnt")
tp->Draw("x:i")
tp->Draw("z:i")
tp->Draw("x:i")
tp->Draw("z:i")
tp->Draw("z1:i")
tp->Draw("z1:x1")
tp->Draw("z1:i")
tp->Draw("z:x")
tp->Draw("y:x")
tt->Draw("y:x")
tp->Draw("y:x","","same")
tt->Draw("Z:x")
tt->Draw("z:x")
tp->Draw("z:x","","same")
tt->Draw("y:x")
tp->Draw("y:x","","same")
tp->Draw("y:x1")
tp->Draw("x1 : i")
tp->Scan("x1 : i : x")
tp->Draw("x1 : i")
tp->Draw("x : i")
tp->Draw("x1 : i")
tp = new TNtuple("tp","","i:x:y:z:x1:y1:z1")
tp->ReadFile("pnt")
tp->Draw("x1 : i")
tp->Draw("sqrt(x1*x1+y1*y1) : i")
tp->Draw("sqrt(x1*x1+y1*y1)")
tp->Draw("x : sqrt(x1*x1+y1*y1)")
tp->Draw("x : sqrt(x1*x1+y1*y1)","","*")
tp->Draw("y : sqrt(x1*x1+y1*y1)","","*")
tp->Draw("z : sqrt(x1*x1+y1*y1)","","*")
tp->Draw("z1 : sqrt(x1*x1+y1*y1)","","*")
tp->Draw("y1 : sqrt(x1*x1+y1*y1)","","*")
tp->Draw("z : sqrt(x1*x1+y1*y1)","","*")
tt->Draw("y:x")
tp->Draw("y:x","","same")
.q
.x tstAlg.C
algSTEER->ProcessTrack(esdEv->GetTrack(0)); > t
.L sim.C
sim(); >> xx.log
.x sim.log 
.x sim.C
.q
.x sim.C
.q
TFile *_file0 = TFile::Open("galice.root")
.ls
gAlice
arr = gAlice->Modules()
arr->GetEntries()
gAlice->Print()
gAlice->Dump()
.q
TFile *_file0 = TFile::Open("galice.root")
.ls
RunLoader->GetAliRun()
gAlice->Detectors()
gAlice->Detectors()->Print()
arr = gAlice->Detectors()
arr->Print()
arr->GetEntriesFast()
TString xx = AliDAQ::ListOfTriggeredDetectors(0xfffffff)
xx
.q
.L sim.C
sim(); >> sss
.q
.L sim.C
sim(); >> sss
.L sim.C
sim(); > sss
.L sim.C
sim(); > sss
.q
.!rm sss
.L sim.C
sim(); > sss
.class AliGRPObject
 q
.q
.L sim.C
sim(); > sss
.L sim.C
sim(); > sss
.q
.x sim.C
.q
.x rec.C
.q
.x rec.C
.q
.x rec.C
.x /home/shahoian/alicesw/aliroot/master/inst/STEER/macros/CheckESD.C
.x aod.C
.x sim.C
.q
.x sim.C
.q
.x sim.C
.x sim.C
.x sim.C
.q
.!resrt
.!reset
.x sim.C
.q
.q
.L sim.C
sim(); > sss
sim(); > sssq
.!rm sss
.L sim.C
sim(); > sss
.q
.x sim.C
.q
.x sim.C
.q
tp = new TNtuple("tp","","i:x:y:z:x1:y1:z1")
tt = new TNtuple("tt","","x:y:z:x1:y1:z1:xx:xr")
tt->ReadFile("xxx")
tp->ReadFile("pnt")
tt->Draw("y:x")
tp->Draw("y:x","","same")
.q
